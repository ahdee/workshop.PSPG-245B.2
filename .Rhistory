mutations$xvar_link_msa = gsub('getma.org','http://mutationassessor.org/r3', mutations$xvar_link_msa )
mutations$xvar_link_pdb = gsub('getma.org','http://mutationassessor.org/r3', mutations$xvar_link_pdb  )
expressionc= expression[complete.cases(expression), ]
samplesnice = gsub ( "-",".", samples)
expressionc[ row.names (expressionc ) %in% c(  "TP53" , "KRAS"), samplesnice ]
mutation = mygeneticprofile[grepl( "Mutation", mygeneticprofile$genetic_profile_name), ]$genetic_profile_id
# ? what other modalities do you think may be of interest
# anyone want to guess what "probe most anti-correlated with expression means"
cna = mygeneticprofile[grepl( "Putative copy", mygeneticprofile$genetic_profile_name),1 ]
exp = mygeneticprofile[grepl( "V2 RSEM", mygeneticprofile$genetic_profile_name),1 ]
cna
k2 ( cancer.list[17:25, ], "cancer list")
k2 ( cancer.list[17:25, ], "cancer list")
k2 ( cancer.list[cancer.list$gene %in% imp, ], "breast cancer genes")
head ( mutations )
head ( cosmic.70 )
colnams ( mutations )
names ( mutations )
cleanmut = c ("igv","dp","af","gene_symbol","case_id",	"mutation_type", "amino_acid_change" , "functional_impact_score"
, "variant_read_count_tumor"	,"reference_read_count_tumor" , "description" )
k2 ( head ( mutations[ , cleanmut], 10) , "top 10 variant ranked by AF")
setdiff ( cleanmut, names ( mutations ))
# Another way we can detect important mutations is to see if other resources are available.
# Here we use cosmic a manaully curated list of recurrent mutations in cancer and look for keyword breast
k2 ( head ( cosmic.70[ grepl("breast",  cosmic.70$description ), ] ), "breast cancer in cosmic")
mutations = merge ( mutations, cosmic.70, by="igv", all.x=T, all.y=F )
nrow ( mutations[ ! is.na ( mutations$description ),  ] ) / nrow (mutations)
k2 ( head ( mutations[ grepl("^BRCA", mutations$gene_symbol), c("amino_acid_change","chr.x","start_position","end_position","reference_allele", "variant_allele",
"gene_symbol","case_id","mutation_status","mutation_type","description")] ) )
# lets tabulate the types of mutations mostly seen with Breast cancer
mutation.type = data.frame ( table ( mutations$mutation_type))
mutation.type = mutation.type[ order ( mutation.type$Freq), ]
mutation.type$Var1 = factor ( mutation.type$Var1, levels = mutation.type$Var1)
ggplot(mutation.type, aes(Var1,Freq), label=Freq ) +
geom_bar(aes(fill = Freq), stat="identity", position = "dodge") +
coord_flip() +
scale_fill_distiller(palette = "RdBu") + xlab("") + ylab("") +
theme(strip.text.y = element_text(angle = 0), legend.position="none") +
geom_text(aes(label=Freq), position=position_dodge(width=0.9), vjust=.4, hjust = .5, size=5) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=16),  # size of label
axis.text.x = element_text(angle=0, hjust=1) ) + ggtitle ( "BRCA mutation types")
mutations$dp = mutations$variant_read_count_tumor + mutations$reference_read_count_tumor
ggplot(mutations, aes(x=dp)) +
geom_density( color="darkblue", fill="steelblue" ) + geom_vline(xintercept = 20, linetype="dotted",
color = "grey", size=1.5) + ggtitle ( " density plot, total depth")
# before
dim ( mutations )
# after
mutations = mutations[ mutations$dp > 20, ]
dim (mutations )
# lets calculate allele freqeuncy here as well
mutations$af = mutations$variant_read_count_tumor / mutations$dp
ggplot(mutations, aes(x=af)) +
geom_density( color="darkblue", fill="#e8975a" ) + geom_vline(xintercept = .1, linetype="dotted",
color = "grey", size=1.5) + ggtitle ( " density plot, allele freqeuncy")
mutations = mutations[ order ( - mutations$af ) , ]
# clean mut head
cleanmut = c ("igv","dp","af","gene_symbol","case_id",	"mutation_type", "amino_acid_change" , "functional_impact_score"
, "variant_read_count_tumor"	,"reference_read_count_tumor" , "description" )
k2 ( head ( mutations[ , cleanmut], 10) , "top 10 variant ranked by AF")
mutation.gene = data.frame ( table ( mutations$gene_symbol))
mutation.gene = mutation.gene[ order ( - mutation.gene$Freq), ]
mutation.gene$Var1 = factor ( mutation.gene$Var1, levels = rev ( mutation.gene$Var1) )
ggplot(mutation.gene [ 1:20, ] , aes(Var1,Freq), label=Freq ) +
geom_bar(aes(fill = Freq), stat="identity", position = "dodge") +
coord_flip() +
scale_fill_distiller(palette = "RdBu") + xlab("") + ylab("") +
theme(strip.text.y = element_text(angle = 0), legend.position="none") +
geom_text(aes(label=Freq), position=position_dodge(width=0.9), vjust=.4, hjust = .5, size=5) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=16),  # size of label
axis.text.x = element_text(angle=0, hjust=1) ) + ggtitle ( "Most recurrent genes")
cosmic.mutation = mutations [ !is.na(mutations$description), ]
mutation.type = data.frame ( table ( cosmic.mutation$mutation_type))
mutation.type = mutation.type[ order ( mutation.type$Freq), ]
mutation.type$Var1 = factor ( mutation.type$Var1, levels = mutation.type$Var1)
ggplot(mutation.type, aes(Var1,Freq), label=Freq ) +
geom_bar(aes(fill = Freq), stat="identity", position = "dodge") +
coord_flip() +
scale_fill_distiller(palette = "RdBu") + xlab("") + ylab("") +
theme(strip.text.y = element_text(angle = 0), legend.position="none") +
geom_text(aes(label=Freq), position=position_dodge(width=0.9), vjust=.4, hjust = .5, size=5) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=16),  # size of label
axis.text.x = element_text(angle=0, hjust=1) ) + ggtitle ( "BRCA mutation types found in cosmic")
ggplot(mutation.type, aes(Var1,Freq), label=Freq ) +
geom_bar(aes(fill = Freq), stat="identity", position = "dodge") +
coord_flip() +
scale_fill_distiller(palette = "RdBu") + xlab("") + ylab("") +
theme(strip.text.y = element_text(angle = 0), legend.position="none") +
geom_text(aes(label=Freq), position=position_dodge(width=0.9), vjust=.4, hjust = .5, size=5) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=16),  # size of label
axis.text.x = element_text(angle=0, hjust=1) ) + ggtitle ( "Mutation types found in cosmic")
ggplot(mutation.type, aes(Var1,Freq), label=Freq ) +
geom_bar(aes(fill = Freq), stat="identity", position = "dodge") +
coord_flip() +
scale_fill_distiller(palette = "RdBu") + xlab("") + ylab("") +
theme(strip.text.y = element_text(angle = 0), legend.position="none") +
geom_text(aes(label=Freq), position=position_dodge(width=0.9), vjust=.4, hjust = .5, size=5) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=16),  # size of label
axis.text.x = element_text(angle=0, hjust=1) ) + ggtitle ( "mutation types")
cosmic.mutation = mutations [ !is.na(mutations$description), ]
mutation.type = data.frame ( table ( cosmic.mutation$mutation_type))
mutation.type = mutation.type[ order ( mutation.type$Freq), ]
mutation.type$Var1 = factor ( mutation.type$Var1, levels = mutation.type$Var1)
ggplot(mutation.type, aes(Var1,Freq), label=Freq ) +
geom_bar(aes(fill = Freq), stat="identity", position = "dodge") +
coord_flip() +
scale_fill_distiller(palette = "RdBu") + xlab("") + ylab("") +
theme(strip.text.y = element_text(angle = 0), legend.position="none") +
geom_text(aes(label=Freq), position=position_dodge(width=0.9), vjust=.4, hjust = .5, size=5) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=16),  # size of label
axis.text.x = element_text(angle=0, hjust=1) ) + ggtitle ( "Mutation types found in cosmic")
table ( mutations$description)
mutations$description
mutations [ is.na(mutations$description), ]
nrow ( mutations [ is.na(mutations$description), ] )
nrow ( mutations [ !is.na(mutations$description), ] )
nrow ( cosmic.mutation )
nrow ( mutations )
cosmic.mutation = mutations [ !is.na(mutations$description), ]
mutation.type = data.frame ( table ( cosmic.mutation$mutation_type))
mutation.type = mutation.type[ order ( mutation.type$Freq), ]
mutation.type$Var1 = factor ( mutation.type$Var1, levels = mutation.type$Var1)
ggplot(mutation.type, aes(Var1,Freq), label=Freq ) +
geom_bar(aes(fill = Freq), stat="identity", position = "dodge") +
coord_flip() +
scale_fill_distiller(palette = "RdBu") + xlab("") + ylab("") +
theme(strip.text.y = element_text(angle = 0), legend.position="none") +
geom_text(aes(label=Freq), position=position_dodge(width=0.9), vjust=.4, hjust = .5, size=5) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=16),  # size of label
axis.text.x = element_text(angle=0, hjust=1) ) + ggtitle ( "Mutation types found in cosmic")
mutation.type = data.frame ( table ( mutations$mutation_type))
mutation.type = mutation.type[ order ( mutation.type$Freq), ]
mutation.type$Var1 = factor ( mutation.type$Var1, levels = mutation.type$Var1)
ggplot(mutation.type, aes(Var1,Freq), label=Freq ) +
geom_bar(aes(fill = Freq), stat="identity", position = "dodge") +
coord_flip() +
scale_fill_distiller(palette = "RdBu") + xlab("") + ylab("") +
theme(strip.text.y = element_text(angle = 0), legend.position="none") +
geom_text(aes(label=Freq), position=position_dodge(width=0.9), vjust=.4, hjust = .5, size=5) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=16),  # size of label
axis.text.x = element_text(angle=0, hjust=1) ) + ggtitle ( "Mutation types found in cosmic")
mutation.type = data.frame ( table ( mutations$mutation_type))
mutation.type = mutation.type[ order ( mutation.type$Freq), ]
mutation.type$Var1 = factor ( mutation.type$Var1, levels = mutation.type$Var1)
ggplot(mutation.type, aes(Var1,Freq), label=Freq ) +
geom_bar(aes(fill = Freq), stat="identity", position = "dodge") +
coord_flip() +
scale_fill_distiller(palette = "RdBu") + xlab("") + ylab("") +
theme(strip.text.y = element_text(angle = 0), legend.position="none") +
geom_text(aes(label=Freq), position=position_dodge(width=0.9), vjust=.4, hjust = .5, size=5) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=16),  # size of label
axis.text.x = element_text(angle=0, hjust=1) ) + ggtitle ( "All mutation types")
ggplot(mutation.gene [ 1:20, ] , aes(Var1,Freq), label=Freq ) +
geom_bar(aes(fill = Freq), stat="identity", position = "dodge") +
coord_flip() +
scale_fill_distiller(palette = "RdBu") + xlab("") + ylab("") +
theme(strip.text.y = element_text(angle = 0), legend.position="none") +
geom_text(aes(label=Freq), position=position_dodge(width=0.9), vjust=.4, hjust = .5, size=5) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=16),  # size of label
axis.text.x = element_text(angle=0, hjust=1) ) + ggtitle ( "Most recurrent genes")
cosmic.mutation = mutations [ !is.na(mutations$description), ]
mutation.type = data.frame ( table ( cosmic.mutation$mutation_type))
mutation.type = mutation.type[ order ( mutation.type$Freq), ]
mutation.type$Var1 = factor ( mutation.type$Var1, levels = mutation.type$Var1)
ggplot(mutation.type, aes(Var1,Freq), label=Freq ) +
geom_bar(aes(fill = Freq), stat="identity", position = "dodge") +
coord_flip() +
scale_fill_distiller(palette = "RdBu") + xlab("") + ylab("") +
theme(strip.text.y = element_text(angle = 0), legend.position="none") +
geom_text(aes(label=Freq), position=position_dodge(width=0.9), vjust=.4, hjust = .5, size=5) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=16),  # size of label
axis.text.x = element_text(angle=0, hjust=1) ) + ggtitle ( "Mutation types found in cosmic")
mutations$dp = mutations$variant_read_count_tumor + mutations$reference_read_count_tumor
ggplot(mutations, aes(x=dp)) +
geom_density( color="darkblue", fill="steelblue" ) + geom_vline(xintercept = 20, linetype="dotted",
color = "grey", size=1.5) + ggtitle ( " density plot, total depth")
quantile ( mutations$dp)
imp
mutation.brca = data.frame ( table ( mutations[ mutations$gene_symbol %in% imp, ] $mutation_type))
mutation.brca = mutation.brca[ order ( mutation.brca$Freq), ]
mutation.brca$Var1 = factor ( mutation.brca$Var1, levels = mutation.brca$Var1)
ggplot(mutation.brca, aes(Var1,Freq), label=Freq ) +
geom_bar(aes(fill = Freq), stat="identity", position = "dodge") +
coord_flip() +
scale_fill_distiller(palette = "RdBu") + xlab("") + ylab("") +
theme(strip.text.y = element_text(angle = 0), legend.position="none") +
geom_text(aes(label=Freq), position=position_dodge(width=0.9), vjust=.4, hjust = .5, size=5) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size=16),  # size of label
axis.text.x = element_text(angle=0, hjust=1) ) + ggtitle ( "Mutation-types in genes associated with breast cancer")
imp.brac = data.frame ( table ( mutations[ grepl( "breast", mutations$description), ]$gene_symbol ) )
imp.brac$fraction = imp.brac$Freq / nrow ( mutations)
imp.brac = imp.brac [ order ( -imp.brac$fraction) , ]
k2 ( head ( imp.brac, 10), "top cosmic genes found in breast cancer")
imp.brac = data.frame ( table ( mutations[ grepl( "breast", mutations$description), ]$gene_symbol ) )
imp.brac$fraction = imp.brac$Freq / nrow ( mutations)
imp.brac = imp.brac [ order ( -imp.brac$fraction) , ]
k2 ( head ( imp.brac, 10), "top cosmic genes found in breast cancer")
imp
top5 = as.character ( imp.brac$Var1[1:5] )
top5 = mutations[ mutations$gene_symbol %in% top5, ]$amino_acid_change
top5 = data.frame ( table ( top5 ) )
top5 = top5 [ order ( - top5$Freq), ]
top5
top5$url = paste0(url,top5$top5)
k2 ( head ( top5, 20), "top 20 recurrent mutations")
expression["BRCA2",  ]
g1 = melt ( expression["BRCA2",  ] )
melt ( expression["BRCA2",  ] )
library ( reshape2)
g1 = melt ( expression["BRCA2",  ] )
head ( g1 )
colnames ( g1 )= c("pid","value")
head  ( age.Her2only.noER )
age.Her2only.noER
her2p
head ( g1 )
her2p
her2p
g1$pid = gsub ( "\\.","-", g1$pid)
head ( g1 )
g1$HER2p = ifelse ( g1$pid == her2p, "HER2P", "")
g1$pid
g1$HER2p = ifelse ( g1$pid %in% her2p, "HER2P", "")
g1
g1$HER2p = ifelse ( g1$pid %in% her2p, "HER2P", "NO.HER2")
g1$HER2p = ifelse ( g1$pid %in% her2p, "HER2P", "NO.HER2")
ggplot(g1, aes(y=value, x=HER2p)) +
geom_violin()+
geom_jitter(shape=19, position=position_jitter(0.07), aes( colour=state), size=3 ) +
theme_bw() +
ggtitle(title.boxplot) +
ylab(" ") +
xlab("")
ggplot(g1, aes(y=value, x=HER2p)) +
geom_violin()+
geom_jitter(shape=19, position=position_jitter(0.07), aes( colour=state), size=3 ) +
theme_bw() +
ylab(" ") +
xlab("") +
theme(legend.position="bottom", legend.title=element_blank(), legend.key = element_blank(),
axis.text.y = element_text(size=12),
axis.text.x = element_text(angle = 90, size=11.5),
axis.title.x = element_text(size=22),
axis.title.y     = element_text(size=22),
legend.text      =element_text(size=12)
)
ggplot(g1, aes(y=value, x=HER2p)) +
geom_violin()+
geom_jitter(shape=19, position=position_jitter(0.07), size=3 ) +
theme_bw() +
ylab(" ") +
xlab("") +
theme(legend.position="bottom", legend.title=element_blank(), legend.key = element_blank(),
axis.text.y = element_text(size=12),
axis.text.x = element_text(angle = 90, size=11.5),
axis.title.x = element_text(size=22),
axis.title.y     = element_text(size=22),
legend.text      =element_text(size=12)
)
ggplot(g1, aes(y=value, x=HER2p)) +
geom_violin()+
geom_jitter(shape=19, position=position_jitter(0.07), size=3 ) +
theme_bw() +
ylab(" ") +
xlab("") +
theme(legend.position="bottom", legend.title=element_blank(), legend.key = element_blank(),
axis.text.y = element_text(size=12),
axis.text.x = element_text(angle = 90, size=11.5),
axis.title.x = element_text(size=22),
axis.title.y     = element_text(size=22),
legend.text      =element_text(size=12)
) + stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean,
geom = "crossbar", width = .5)
ggplot(g1, aes(y=value, x=HER2p, fill=HER2p)) +
geom_violin()+
geom_jitter(shape=19, position=position_jitter(0.07), size=3 ) +
theme_bw() +
ylab(" ") +
xlab("") +
theme(legend.position="bottom", legend.title=element_blank(), legend.key = element_blank(),
axis.text.y = element_text(size=12),
axis.text.x = element_text(angle = 90, size=11.5),
axis.title.x = element_text(size=22),
axis.title.y     = element_text(size=22),
legend.text      =element_text(size=12)
) + stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean,
geom = "crossbar", width = .5)
g1 = melt ( expression["PIK3CA",  ] )
colnames ( g1 )= c("pid","value")
g1$pid = gsub ( "\\.","-", g1$pid)
g1$HER2p = ifelse ( g1$pid %in% her2p, "HER2P", "NO.HER2")
ggplot(g1, aes(y=value, x=HER2p, fill=HER2p)) +
geom_violin()+
geom_jitter(shape=19, position=position_jitter(0.07), size=3 ) +
theme_bw() +
ylab(" ") +
xlab("") +
theme(legend.position="bottom", legend.title=element_blank(), legend.key = element_blank(),
axis.text.y = element_text(size=12),
axis.text.x = element_text(angle = 90, size=11.5),
axis.title.x = element_text(size=22),
axis.title.y     = element_text(size=22),
legend.text      =element_text(size=12)
) + stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean,
geom = "crossbar", width = .5)
g1 = melt ( expression["PIK3CA",  ] )
colnames ( g1 )= c("pid","value")
g1$pid = gsub ( "\\.","-", g1$pid)
g1$HER2p = ifelse ( g1$pid %in% her2p, "HER2P", "NO.HER2")
g1$value = log2 ( g1$value + 1 )
ggplot(g1, aes(y=value, x=HER2p, fill=HER2p)) +
geom_violin()+
geom_jitter(shape=19, position=position_jitter(0.07), size=3 ) +
theme_bw() +
ylab(" ") +
xlab("") +
theme(legend.position="bottom", legend.title=element_blank(), legend.key = element_blank(),
axis.text.y = element_text(size=12),
axis.text.x = element_text(angle = 90, size=11.5),
axis.title.x = element_text(size=22),
axis.title.y     = element_text(size=22),
legend.text      =element_text(size=12)
) + stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean,
geom = "crossbar", width = .5)
g1 = melt ( expression["TP53",  ] )
colnames ( g1 )= c("pid","value")
g1$pid = gsub ( "\\.","-", g1$pid)
g1$HER2p = ifelse ( g1$pid %in% her2p, "HER2P", "NO.HER2")
g1$value = log2 ( g1$value + 1 )
ggplot(g1, aes(y=value, x=HER2p, fill=HER2p)) +
geom_violin()+
geom_jitter(shape=19, position=position_jitter(0.07), size=3 ) +
theme_bw() +
ylab(" ") +
xlab("") +
theme(legend.position="bottom", legend.title=element_blank(), legend.key = element_blank(),
axis.text.y = element_text(size=12),
axis.text.x = element_text(angle = 90, size=11.5),
axis.title.x = element_text(size=22),
axis.title.y     = element_text(size=22),
legend.text      =element_text(size=12)
) + stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean,
geom = "crossbar", width = .5)
ggplot(g1, aes(y=value, x=HER2p, fill=HER2p)) +
geom_violin()+
geom_jitter(shape=19, position=position_jitter(0.07), size=3 ) +
theme_bw() +
ylab("log2 + 1 ") +
xlab("") +
theme(legend.position="bottom", legend.title=element_blank(), legend.key = element_blank(),
axis.text.y = element_text(size=12),
axis.text.x = element_text(angle = 90, size=11.5),
axis.title.x = element_text(size=22),
axis.title.y     = element_text(size=22),
legend.text      =element_text(size=12)
) + stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean,
geom = "crossbar", width = .5)
ggplot(g1, aes(y=value, x=HER2p, fill=HER2p)) +
geom_violin()+
geom_jitter(shape=19, position=position_jitter(0.07), size=3 ) +
theme_bw() +
ylab("log2 (tpm + 1 ) ") +
xlab("") +
theme(legend.position="bottom", legend.title=element_blank(), legend.key = element_blank(),
axis.text.y = element_text(size=12),
axis.text.x = element_text(angle = 90, size=11.5),
axis.title.x = element_text(size=22),
axis.title.y     = element_text(size=22),
legend.text      =element_text(size=12)
) + stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean,
geom = "crossbar", width = .5)
ggplot(g1, aes(y=value, x=HER2p, fill=HER2p)) +
geom_violin()+
geom_jitter(shape=19, position=position_jitter(0.07), size=3 ) +
theme_bw() +
ylab("log2 (tpm + 1 ) ") +
xlab("") +
theme(legend.position="bottom", legend.title=element_blank(), legend.key = element_blank(),
axis.text.y = element_text(size=12),
axis.text.x = element_text(angle = 90, size=11.5),
axis.title.x = element_text(size=22),
axis.title.y     = element_text(size=22),
legend.text      =element_text(size=12)
) + stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean,
geom = "crossbar", width = .5)  + ggtitle ( "PIK3CA")
# This will return a table with a list of available cancer studies to draw from
k2( head ( studies, 10) , "example list of data available in cbioportal")
k2 ( head ( mycaselist[ ,c("case_list_id",	 "case_list_name",	 "case_list_description",	 "cancer_study_id"	)], 50), "list of cases for the BRCA CELL 2015 study" )
mysample
head ( drug )
unique ( drug$variant)
head ( drug )
head ( drug[ , c("variant","match")])
head ( drug[ , c("variant","match")], 50)
seq(from=200, to=length ( myclinicaldata$pid), by=200)
seq(from=150, to=length ( myclinicaldata$pid), by=150)
dim ( expression )
total = ceiling ( length( cancer.gene)/100  )  *100
mutations = data.frame (   stringsAsFactors = F )
expression = data.frame (   stringsAsFactors = F )
e = 1
for(i in seq(from=200, to=total, by=200)){
if ( i > length(cancer.gene)){
i = length(cancer.gene)
}
print ( paste ( e, i ))
temp = getMutationData(cbiop , brca.study, mutation, cancer.gene[e:i])
mutations = rbind ( mutations, temp)
e2 = 1
exp.temp2 = 1
for(i2 in seq(from=150, to=length ( myclinicaldata$pid), by=150)){
exp.temp = getProfileData(cbiop , cancer.gene[e:i]
, exp
, getCaseLists(cbiop,brca.study)[1,1] , myclinicaldata$pid[e2:i2])
if ( exp.temp2 == 1){
exp.temp2 =   t ( exp.temp)
}else {
exp.temp2 =  cbind ( exp.temp2,  t ( exp.temp))
}
e2 = i2+ 1
Sys.sleep (1) # lets give the system a break
}
e = i + 1
expression = rbind ( expression, exp.temp2)
Sys.sleep (2) # lets give the system a break
}
# create coordinates
mutations$igv = paste ( mutations$chr, mutations$start_position, mutations$end_position, mutations$reference_allele, mutations$variant_allele)
dim ( expression)
saveRDS(list(mutations=mutations, expression=expression), "freeze.2020")
myclinicaldata
saveRDS(list(mutations=mutations, expression=expression, myclinicaldata=myclinicaldata), "freeze.2020")
saveRDS(list(mutations=mutations, expression=expression, myclinicaldata=myclinicaldata,mycaselist=mycaselist), "freeze.2020")
dim ( mutations )
total = ceiling ( length( cancer.gene)/100  )  *100
mutations = data.frame (   stringsAsFactors = F )
expression = data.frame (   stringsAsFactors = F )
e = 1
for(i in seq(from=150, to=total, by=150)){
if ( i > length(cancer.gene)){
i = length(cancer.gene)
}
print ( paste ( e, i ))
temp = getMutationData(cbiop , brca.study, mutation, cancer.gene[e:i])
mutations = rbind ( mutations, temp)
Sys.sleep (2) # lets give the system a break
e2 = 1
exp.temp2 = 1
for(i2 in seq(from=150, to=length ( myclinicaldata$pid), by=150)){
exp.temp = getProfileData(cbiop , cancer.gene[e:i]
, exp
, getCaseLists(cbiop,brca.study)[1,1] , myclinicaldata$pid[e2:i2])
if ( exp.temp2 == 1){
exp.temp2 =   t ( exp.temp)
}else {
exp.temp2 =  cbind ( exp.temp2,  t ( exp.temp))
}
e2 = i2+ 1
Sys.sleep (1) # lets give the system a break
}
e = i + 1
expression = rbind ( expression, exp.temp2)
}
dim ( mutations )
