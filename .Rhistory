) +theme_bw(base_size = 20)  +  theme(legend.text=element_text(size=15), legend.position = "bottom") + guides(color = guide_legend(override.aes = list(size=10)))
ggplot(results , aes(logfc, -log10(fdr))) +
geom_point(aes(col=class)) +
scale_color_manual(values=c("up"="#5EAE64", "no-change"="grey", "down"= "#D55A3D"), breaks=c("up", "down", "no-change"), labels=c(paste0("up in ",'her2',"(",nrow(results [results $class=='up',]),")"), paste0("down in ", 'her2' ,"(",nrow(results[results $class=='down',]),")"), "no-change")) +
ggtitle(paste0( " Volcano plot ")) +
geom_text_repel(
label_this,
aes(
label = label
),
fontface=2,
color="black",
point.padding = unit(.25, "lines"),
box.padding = unit(.25, "lines"),
nudge_y = 0.1
)
label_this
ggplot(results , aes(logfc, -log10(fdr))) +
geom_point(aes(col=class)) +
scale_color_manual(values=c("up"="#5EAE64", "no-change"="grey", "down"= "#D55A3D"), breaks=c("up", "down", "no-change"), labels=c(paste0("up in ",'her2',"(",nrow(results [results $class=='up',]),")"), paste0("down in ", 'her2' ,"(",nrow(results[results $class=='down',]),")"), "no-change")) +
ggtitle(paste0( " Volcano plot ")) +
geom_text_repel(
label_this,
aes(
label = label
),
fontface=2,
color="black",
point.padding = unit(.25, "lines"),
box.padding = unit(.25, "lines"),
nudge_y = 0.1
)
ggplot(results , aes(logfc, -log10(fdr))) +
geom_point(aes(col=class)) +
scale_color_manual(values=c("up"="#5EAE64", "no-change"="grey", "down"= "#D55A3D"), breaks=c("up", "down", "no-change"), labels=c(paste0("up in ",'her2',"(",nrow(results [results $class=='up',]),")"), paste0("down in ", 'her2' ,"(",nrow(results[results $class=='down',]),")"), "no-change")) +
ggtitle(paste0( " Volcano plot ")) +theme_bw(base_size = 20)  +  theme(legend.text=element_text(size=15), legend.position = "bottom") + guides(color = guide_legend(override.aes = list(size=10)))
ggplot(results , aes(logfc, -log10(fdr))) +
geom_point(aes(col=class)) +
scale_color_manual(values=c("up"="#5EAE64", "no-change"="grey", "down"= "#D55A3D"), breaks=c("up", "down", "no-change"), labels=c(paste0("up in ",'her2',"(",nrow(results [results $class=='up',]),")"), paste0("down in ", 'her2' ,"(",nrow(results[results $class=='down',]),")"), "no-change")) +
ggtitle(paste0( " Volcano plot ")) +theme_bw(base_size = 40)  +  theme(legend.text=element_text(size=15), legend.position = "bottom") + guides(color = guide_legend(override.aes = list(size=10)))
ggplot(results , aes(logfc, -log10(fdr))) +
geom_point(aes(col=class), size=15) +
scale_color_manual(values=c("up"="#5EAE64", "no-change"="grey", "down"= "#D55A3D"), breaks=c("up", "down", "no-change"), labels=c(paste0("up in ",'her2',"(",nrow(results [results $class=='up',]),")"), paste0("down in ", 'her2' ,"(",nrow(results[results $class=='down',]),")"), "no-change")) +
ggtitle(paste0( " Volcano plot ")) +theme_bw(base_size = 30)  +  theme(legend.text=element_text(size=15), legend.position = "bottom") + guides(color = guide_legend(override.aes = list(size=10)))
ggplot(results , aes(logfc, -log10(fdr))) +
geom_point(aes(col=class), size=10) +
scale_color_manual(values=c("up"="#5EAE64", "no-change"="grey", "down"= "#D55A3D"), breaks=c("up", "down", "no-change"), labels=c(paste0("up in ",'her2',"(",nrow(results [results $class=='up',]),")"), paste0("down in ", 'her2' ,"(",nrow(results[results $class=='down',]),")"), "no-change")) +
ggtitle(paste0( " Volcano plot ")) +theme_bw(base_size = 30)  +  theme(legend.text=element_text(size=15), legend.position = "bottom") + guides(color = guide_legend(override.aes = list(size=10)))
ggplot(results , aes(logfc, -log10(fdr))) +
geom_point(aes(col=class), size=5) +
scale_color_manual(values=c("up"="#5EAE64", "no-change"="grey", "down"= "#D55A3D"), breaks=c("up", "down", "no-change"), labels=c(paste0("up in ",'her2',"(",nrow(results [results $class=='up',]),")"), paste0("down in ", 'her2' ,"(",nrow(results[results $class=='down',]),")"), "no-change")) +
ggtitle(paste0( " Volcano plot ")) +theme_bw(base_size = 30)  +  theme(legend.text=element_text(size=15), legend.position = "bottom") + guides(color = guide_legend(override.aes = list(size=10)))
ggplot(results , aes(logfc, -log10(fdr))) +
geom_point(aes(col=class), size=3, alpha=.6) +
scale_color_manual(values=c("up"="#5EAE64", "no-change"="grey", "down"= "#D55A3D"), breaks=c("up", "down", "no-change"), labels=c(paste0("up in ",'her2',"(",nrow(results [results $class=='up',]),")"), paste0("down in ", 'her2' ,"(",nrow(results[results $class=='down',]),")"), "no-change")) +
ggtitle(paste0( " Volcano plot ")) +theme_bw(base_size = 30)  +  theme(legend.text=element_text(size=15), legend.position = "bottom") + guides(color = guide_legend(override.aes = list(size=10)))
library(clusterProfiler)
data(geneList, package="DOSE")
temp <- names(geneList)[abs(geneList) > 2]
temp
head ( ens )
ens = readRDS( "https://www.dropbox.com/s/wzi9d9jriz0up9x/gene.detail.rds?dl=1")
ens = readRDS( "https://www.dropbox.com/s/wzi9d9jriz0up9x/gene.detail.rds?dl=1")
ens = readRDS( "gene.detail.rds")
ens
head ( ens )
head ( ens )
head ( results )
head ( ens )
results$gene = row.names ( results )
results = merge ( results, ens[, c("external_gene_name",  "entrezgene_id")] , by.x = "gene", by.y="external_gene_name", all.x=T, all.y=F )
head ( results )
results = apply (expressionc, 1, function(x) wtest(x))
results = data.frame ( t ( results ))
colnames(results) = c( "pv", "logfc", "her2_ave","base_ave", "all_ave" )
results$fdr = p.adjust(results$pv,  method = "fdr",  n=nrow ( results))
results = results[ order ( results$fdr), ]
results = na.omit(results)
results$class  = ifelse(  results$fdr > 0.05  , "no-change",
ifelse(
results$logfc >= .5, "up",
ifelse(
results$logfc <= -.5, "down",
"no-change"
)
) )
# lets check the distribution
table ( results$class)
results[results$class == "up", ]
label_this <- head ( results[results$class == "up", ] , 10)
label_this$label = row.names ( label_this)
results = data.frame ( results)
ggplot(results , aes(logfc, -log10(fdr))) +
geom_point(aes(col=class), size=3, alpha=.6) +
scale_color_manual(values=c("up"="#5EAE64", "no-change"="grey", "down"= "#D55A3D"), breaks=c("up", "down", "no-change"), labels=c(paste0("up in ",'her2',"(",nrow(results [results $class=='up',]),")"), paste0("down in ", 'her2' ,"(",nrow(results[results $class=='down',]),")"), "no-change")) +
ggtitle(paste0( " Volcano plot ")) +theme_bw(base_size = 30)  +  theme(legend.text=element_text(size=15), legend.position = "bottom") + guides(color = guide_legend(override.aes = list(size=10)))
results$gene = row.names ( results )
temp = results
dim ( temp )
results = merge ( results, ens[!duplicated ( ens$external_gene_name), c("external_gene_name",  "entrezgene_id")] , by.x = "gene", by.y="external_gene_name", all.x=T, all.y=F )
head ( results )
dim ( results )
library( 'org.Hm.eg.db', character.only = TRUE)
library( 'org.Hs.eg.db', character.only = TRUE)
results = results[ order ( results$logfc), ]
gse <- gseGO(geneList=results$gene,
ont ="ALL",
keyType = "SYMBOL",
nPerm = 10000,
minGSSize = 3,
maxGSSize = 800,
pvalueCutoff = 0.05,
verbose = TRUE,
OrgDb = 'org.Hs.eg.db',
pAdjustMethod = "none")
results$gene
glist = setNames( results$logfc, results$gene)
head ( glist )
results = results[ order ( -results$logfc), ]
glist = setNames( results$logfc, results$gene)
gse <- gseGO(geneList=glist,
ont ="ALL",
keyType = "SYMBOL",
nPerm = 10000,
minGSSize = 3,
maxGSSize = 800,
pvalueCutoff = 0.05,
verbose = TRUE,
OrgDb = 'org.Hs.eg.db',
pAdjustMethod = "none")
gse <- gseGO(geneList=glist,
ont ="ALL",
keyType = "SYMBOL",
nPerm = 10000,
minGSSize = 3,
maxGSSize = 800,
pvalueCutoff = 0.05,
verbose = TRUE,
OrgDb = org.Hs.eg.db,
pAdjustMethod = "none")
library (DOSE)
dotplot(gse, showCategory=10, split=".sign") + facet_grid(.~.sign)
head ( gse )
emapplot(gse, showCategory = 10)
library(clusterProfiler)
library (DOSE)
library( 'org.Hs.eg.db', character.only = TRUE)
ridgeplot(gse) + labs(x = "enrichment distribution")
go_enrich_bp <- enrichGO(gene = results[ results$class != "no-change", ]$gene ,
universe = row.names (results),
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = T,
ont = "BP",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10)
go_enrich_bp
results[ results$class != "no-change", ]$gene
row.names (results
)
go_enrich_bp <- enrichGO(gene = results[ results$class != "no-change", ]$gene ,
universe = results$gene,
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = T,
ont = "BP",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10)
results$gene
results[ results$class != "no-change", ]$gene
go_enrich_bp <- enrichGO(gene = results[ results$class != "no-change", ]$gene ,
universe = glist,
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = T,
ont = "BP",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10)
glist
glist = sort(glist, decreasing = TRUE)
go_enrich_bp <- enrichGO(gene = results[ results$class != "no-change", ]$gene ,
universe = glist,
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = T,
ont = "BP",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10)
go_enrich_bp <- enrichGO(gene = results[ results$class != "no-change", ]$gene ,
#universe = glist,
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = T,
ont = "BP",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10)
results[ results$class != "no-change", ]$gene
go_enrich_bp <- enrichGO(gene = results[ results$class != "no-change", ]$gene ,
universe = as.character ( results$gene),
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = T,
ont = "BP",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10)
go_enrich_bp <- enrichGO(gene = as.character ( results[ results$class != "no-change", ]$gene ),
universe = as.character ( results$gene),
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = T,
ont = "BP",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10)
go_enrich_bp <- enrichGO(gene = as.character ( results[ results$class != "no-change", ]$gene ),
universe = as.character ( results$gene),
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = T,
ont = "BP",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10
setReadable =F
)
go_enrich_bp <- enrichGO(gene = as.character ( results[ results$class != "no-change", ]$gene ),
universe = as.character ( results$gene),
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = T,
ont = "BP",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10,
setReadable =F
)
go_enrich_bp <- enrichGO(gene = as.character ( results[ results$class != "no-change", ]$gene ),
universe = as.character ( results$gene),
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = T,
ont = "BP",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10,
readable=F
)
go_enrich_bp <- enrichGO(gene = as.character ( results[ results$class != "no-change", ]$gene ),
universe = as.character ( results$gene),
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = F,
ont = "BP",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10
)
barplot(go_enrich_bp,
drop = TRUE,
showCategory = 10,
title = "GO Biological Pathways",
font.size = 8)
dotplot(go_enrich_bp)
go_enrich_bp <- enrichGO(gene = as.character ( results[ results$class == "up", ]$gene ),
universe = as.character ( results$gene),
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = F,
ont = "BP",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10
)
barplot(go_enrich_bp,
drop = TRUE,
showCategory = 10,
title = "GO Biological Pathways",
font.size = 8)
go_enrich_bp <- enrichGO(gene = as.character ( results[ results$class == "up", ]$gene ),
universe = as.character ( results$gene),
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = F,
ont = "MF",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10
)
barplot(go_enrich_bp,
drop = TRUE,
showCategory = 10,
title = "GO Biological Pathways",
font.size = 8)
dotplot(go_enrich_bp)
goplot(go_enrich_bp)
go_enrich_bp <- enrichGO(gene = as.character ( results[ results$class == "up", ]$gene ),
universe = as.character ( results$gene),
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = F,
ont = "BP",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10
)
barplot(go_enrich_bp,
drop = TRUE,
showCategory = 10,
title = "GO Biological Pathways",
font.size = 8)
dotplot(go_enrich_bp)
goplot(go_enrich_bp)
results = apply (expressionc, 1, function(x) wtest(x))
results = data.frame ( t ( results ))
colnames(results) = c( "pv", "logfc", "her2_ave","base_ave", "all_ave" )
results$fdr = p.adjust(results$pv,  method = "fdr",  n=nrow ( results))
results = results[ order ( results$fdr), ]
results = na.omit(results)
results$class  = ifelse(  results$fdr > 0.05  , "no-change",
ifelse(
results$logfc >= .5, "up",
ifelse(
results$logfc <= -.5, "down",
"no-change"
)
) )
# lets check the distribution
table ( results$class)
results[results$class == "up", ]
label_this <- head ( results[results$class == "up", ] , 10)
label_this$label = row.names ( label_this)
results = data.frame ( results)
ggplot(results , aes(logfc, -log10(fdr))) +
geom_point(aes(col=class), size=3, alpha=.6) +
scale_color_manual(values=c("up"="#5EAE64", "no-change"="grey", "down"= "#D55A3D"), breaks=c("up", "down", "no-change"), labels=c(paste0("up in ",'her2',"(",nrow(results [results $class=='up',]),")"), paste0("down in ", 'her2' ,"(",nrow(results[results $class=='down',]),")"), "no-change")) +
ggtitle(paste0( " Volcano plot ")) +theme_bw(base_size = 30)  +  theme(legend.text=element_text(size=15), legend.position = "bottom") + guides(color = guide_legend(override.aes = list(size=10)))
results$gene = row.names ( results )
#results = merge ( results, ens[!duplicated ( ens$external_gene_name), c("external_gene_name",  "entrezgene_id")] , by.x = "gene", by.y="external_gene_name", all.x=T, all.y=F )
results = results[ order ( -results$logfc), ]
glist = setNames( results$logfc, results$gene)
glist = sort(glist, decreasing = TRUE)
gse <- gseGO(geneList=glist,
ont ="ALL",
keyType = "SYMBOL",
nPerm = 10000,
minGSSize = 3,
maxGSSize = 800,
pvalueCutoff = 0.05,
verbose = TRUE,
OrgDb = org.Hs.eg.db,
pAdjustMethod = "none")
gsea_dot = dotplot(gse, showCategory=10, split=".sign") + facet_grid(.~.sign)
gsea_ridge = ridgeplot(gse) + labs(x = "enrichment distribution")
gsea_dot
gsea_ridge
go_enrich_bp <- enrichGO(gene = as.character ( results[ results$class == "up", ]$gene ),
universe = as.character ( results$gene),
OrgDb = org.Hs.eg.db,
keyType = 'SYMBOL',
readable = F,
ont = "BP",
pvalueCutoff = 0.05,
qvalueCutoff = 0.10
)
go_1 = barplot(go_enrich_bp,
drop = TRUE,
showCategory = 10,
title = "GO Biological Pathways",
font.size = 8)
go_2 =dotplot(go_enrich_bp)
go_1
go_2
samplesnice = gsub ( "-",".", samples) # common issue when converting from dataframe to data matrix.
expressionc[ row.names (expressionc ) %in% c(  "TP53" , "KRAS"), samplesnice ]
do.these = c( "TP53", "BRCA2","PTEN", "BRCA1", "ERBB2", "EGFR"  )
plot.out = list()
for ( gene in do.these  ){
g1 = melt (  expression[gene,  ]  )
colnames ( g1 )= c("pid","value")
g1$pid = gsub ( "\\.","-", g1$pid)
g1$HER2p = ifelse ( g1$pid %in% her2p, "HER2P", "NO.HER2")
g1$value = log2 ( g1$value + 1 )
mann_whit = wilcox.test(g1[g1$HER2p == "NO.HER2", ]$value,
g1[g1$HER2p != "NO.HER2", ]$value
,paired=FALSE)
p = round ( mann_whit$p.value, 2 )
bon = p * length ( do.these )
gthis = ggplot(g1, aes(y=value, x=HER2p, fill=HER2p)) +
geom_violin()+
geom_jitter(shape=19, position=position_jitter(0.07), size=3 ) +
theme_bw() +
ylab("log2 (tpm + 1 ) ") +
xlab("") +
theme(legend.position="none", legend.title=element_blank(), legend.key = element_blank(),
axis.text.y = element_text(size=12),
axis.text.x = element_text(angle = 90, size=11.5),
axis.title.x = element_text(size=22),
axis.title.y     = element_text(size=22),
legend.text      =element_text(size=12)
) + stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean,
geom = "crossbar", width = .5)  + ggtitle ( gene ) +
scale_fill_manual(values = c("#a6cee3","#b2df8a", "#fdbf6f") ) +
ggtitle ( paste ( gene, "p.value", p, "corr", bon ))
plot.out[[gene]] = gthis
#plot ( gthis )
}
do.call("grid.arrange", c(plot.out, ncol=2))
head ( glist )
samplesnice = gsub ( "-",".", samples) # common issue when converting from dataframe to data matrix.
expressionc[ row.names (expressionc ) %in% c(  "TP53" , "KRAS"), samplesnice ]
do.these = head ( names ( glist ) )
plot.out = list()
for ( gene in do.these  ){
g1 = melt (  expression[gene,  ]  )
colnames ( g1 )= c("pid","value")
g1$pid = gsub ( "\\.","-", g1$pid)
g1$HER2p = ifelse ( g1$pid %in% her2p, "HER2P", "NO.HER2")
g1$value = log2 ( g1$value + 1 )
mann_whit = wilcox.test(g1[g1$HER2p == "NO.HER2", ]$value,
g1[g1$HER2p != "NO.HER2", ]$value
,paired=FALSE)
p = round ( mann_whit$p.value, 2 )
bon = p * length ( do.these )
gthis = ggplot(g1, aes(y=value, x=HER2p, fill=HER2p)) +
geom_violin()+
geom_jitter(shape=19, position=position_jitter(0.07), size=3 ) +
theme_bw() +
ylab("log2 (tpm + 1 ) ") +
xlab("") +
theme(legend.position="none", legend.title=element_blank(), legend.key = element_blank(),
axis.text.y = element_text(size=12),
axis.text.x = element_text(angle = 90, size=11.5),
axis.title.x = element_text(size=22),
axis.title.y     = element_text(size=22),
legend.text      =element_text(size=12)
) + stat_summary(fun.y = mean, fun.ymin = mean, fun.ymax = mean,
geom = "crossbar", width = .5)  + ggtitle ( gene ) +
scale_fill_manual(values = c("#a6cee3","#b2df8a", "#fdbf6f") ) +
ggtitle ( paste ( gene, "p.value", p, "corr", bon ))
plot.out[[gene]] = gthis
#plot ( gthis )
}
do.call("grid.arrange", c(plot.out, ncol=2))
exp = data.frame ( t ( expressionc ))
exp =exp [ , unique ( c( "ERBB2", names ( exp)))]
temp = cor(exp, exp$ERBB2, method="spearman"  )
her2.c = as.numeric(temp )
names ( her2.c) = row.names ( temp )
her2.c = sort ( abs ( her2.c ), decreasing = T )
her2.c = round ( her2.c, 3)
do.these = head ( names ( her2.c ), 7)
do.these = do.these[-1]
plot.out = list()
for ( gene in do.these  ){
gthis = ggplot(exp, aes_string (x="ERBB2", y=gene)) +
geom_point(position = position_jitter(width = 0.5, height = 0.5)) +
geom_smooth(method=lm
, se=FALSE
, fullrange=TRUE
)+
theme_classic() +  stat_cor(method = "spearman") + ggtitle(gene)
plot.out[[gene]] = gthis
#plot ( gthis )
}
do.call("grid.arrange", c(plot.out, ncol=2))
scaled.dat <- data.frame ( t ( scale(exp) ))
myid2 = gsub ( "-", ".", myid )
my.dat = scaled.dat[, myid2, drop=T]
names ( my.dat)= row.names (scaled.dat )
my.dat = sort ( abs ( my.dat ), decreasing = T )
my.dat = round ( my.dat, 3)
gene = names (  my.dat[1] )
g1 = melt (  as.matrix ( expressionc[ gene, ]  ) )
colnames ( g1 )= c("gene","pid","value")
g1 = g1[ order ( g1$value), ]
g1$pid = factor ( g1$pid, levels=g1$pid)
ggplot(g1 , aes(x=pid, y=value, color=  value  )) +
geom_bar(stat="identity") +
scale_fill_brewer(palette = "Set1")    +
xlab("") + ylab("") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()
) + theme_void()  +
geom_text_repel(
data = g1[g1$pid == myid2,  ],
aes(
label = pid
)
,
fontface="bold",
color="black",
size = 5,
nudge_x = 20.15,
box.padding = 1.5,
nudge_y = -.5,
) + ggtitle ( paste ( "Expression of ", gene, "relative to all BRCA samples" )  )
myid2
my.dat
my.dat[my.dat> 1.96 ]
gene = names (  my.dat[my.dat> 1.96 ] )[1:12]
g1 = melt (  as.matrix ( expressionc[ gene, ]  ) )
colnames ( g1 )= c("gene","pid","value")
g1$pid = as.character ( g1$pid)
g1$group = ifelse ( g1$pid == myid2, myid2, "base")
ccc = setNames( c("red", "grey"), c(myid2, "base"))
ggplot(g1, aes(y=value, x=gene , colour=group )) +
geom_violin()+
geom_jitter(shape=19, position=position_jitter(0.07), size=3 ) +
theme_bw() +
ylab("log2 (tpm + 1 ) ") +
xlab("") +
theme(legend.position="bottom", legend.title=element_blank(), legend.key = element_blank(),
axis.text.y = element_text(size=12),
axis.text.x = element_text(angle = 90, size=11.5),
axis.title.x = element_text(size=22),
axis.title.y     = element_text(size=22),
legend.text      =element_text(size=12)
)  + ggtitle ( paste ( "Top expression gene", myid2 ) ) + scale_colour_manual(values=ccc) +
facet_wrap(gene ~., scales = "free" )
